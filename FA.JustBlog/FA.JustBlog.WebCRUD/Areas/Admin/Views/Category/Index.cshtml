@using FA.JustBlog.Core.Enums
@model IEnumerable<FA.JustBlog.ViewModels.Category.CategoryViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var enums=ViewBag.status as IDictionary<int,string>;
}



<p>
    @Html.ActionLink("Create New", "Create","Category")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
          <th>
            @Html.DisplayNameFor(model => model.UpdatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>Action</th>
    </tr>

@foreach (var item in Model) {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CreatedOn)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.UpdatedOn)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Status)
    </td>

    <td>
        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
        @Html.ActionLink("Detail", "Details", new { id = item.Id }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
    </td>
</tr>
}

</table>
